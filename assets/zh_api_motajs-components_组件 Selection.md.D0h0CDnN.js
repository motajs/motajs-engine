import{_ as i,c as a,o as t,a0 as n}from"./chunks/framework.DleKaMrY.js";const c=JSON.parse('{"title":"Selection 组件 API 文档","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/motajs-components/组件 Selection.md","filePath":"zh/api/motajs-components/组件 Selection.md"}'),e={name:"zh/api/motajs-components/组件 Selection.md"};function l(h,s,p,d,k,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="selection-组件-api-文档" tabindex="-1">Selection 组件 API 文档 <a class="header-anchor" href="#selection-组件-api-文档" aria-label="Permalink to &quot;Selection 组件 API 文档&quot;">​</a></h1><p>本文档由 <code>DeepSeek R1</code> 模型生成并微调。</p><hr><h2 id="核心特性" tabindex="-1">核心特性 <a class="header-anchor" href="#核心特性" aria-label="Permalink to &quot;核心特性&quot;">​</a></h2><ul><li><strong>动态高亮</strong>：自动呼吸动画效果</li><li><strong>精准定位</strong>：像素级坐标控制</li><li><strong>透明度动画</strong>：可定制不透明度变化范围</li></ul><hr><h2 id="props-属性说明" tabindex="-1">Props 属性说明 <a class="header-anchor" href="#props-属性说明" aria-label="Permalink to &quot;Props 属性说明&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>loc</code></td><td><code>ElementLocator</code></td><td><strong>必填</strong></td><td>光标定位</td></tr><tr><td><code>color</code></td><td><code>CanvasStyle</code></td><td><code>#ddd</code></td><td>填充颜色（无皮肤时生效）</td></tr><tr><td><code>border</code></td><td><code>CanvasStyle</code></td><td><code>gold</code></td><td>边框颜色（无皮肤时生效）</td></tr><tr><td><code>alphaRange</code></td><td><code>[number, number]</code></td><td><code>[0.25, 0.55]</code></td><td>不透明度波动范围 [最小值, 最大值]</td></tr></tbody></table><hr><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><h3 id="纯色模式" tabindex="-1">纯色模式 <a class="header-anchor" href="#纯色模式" aria-label="Permalink to &quot;纯色模式&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自定义颜色方案</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Selection</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    loc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">240</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rgba(0,128,255,0.2)&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 填充颜色</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    border</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#00BFFF&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 边框颜色</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alphaRange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><hr><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ol><li><p><strong>动画速度</strong><br> 呼吸动画固定为 2000ms/周期，暂不支持自定义时长</p></li><li><p><strong>点击反馈</strong><br> 建议配合事件系统实现点击效果：</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">container</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onClick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{handleClick}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Selection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ol>`,15)]))}const E=i(e,[["render",l]]);export{c as __pageData,E as default};
