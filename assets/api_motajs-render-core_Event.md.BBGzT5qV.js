import{_ as p,C as o,c as r,o as i,a2 as e,b as d,w as s,a as n,G as h,a3 as l}from"./chunks/framework.C2USoNCM.js";const u=JSON.parse('{"title":"Event 模块 API 文档","description":"","frontmatter":{},"headers":[],"relativePath":"api/motajs-render-core/Event.md","filePath":"api/motajs-render-core/Event.md"}'),k={name:"api/motajs-render-core/Event.md"};function c(E,t,y,g,b,F){const a=o("Mermaid");return i(),r("div",null,[t[2]||(t[2]=e('<h1 id="event-模块-api-文档" tabindex="-1">Event 模块 API 文档 <a class="header-anchor" href="#event-模块-api-文档" aria-label="Permalink to &quot;Event 模块 API 文档&quot;">​</a></h1><p>以下内容由 <code>DeepSeek R1</code> 模型生成并微调。</p><hr><h2 id="枚举说明" tabindex="-1">枚举说明 <a class="header-anchor" href="#枚举说明" aria-label="Permalink to &quot;枚举说明&quot;">​</a></h2><h3 id="mousetype" tabindex="-1">MouseType <a class="header-anchor" href="#mousetype" aria-label="Permalink to &quot;MouseType&quot;">​</a></h3><table tabindex="0"><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td><code>None</code></td><td>没有按键按下</td></tr><tr><td><code>Left</code></td><td>左键</td></tr><tr><td><code>Middle</code></td><td>中键（按下滚轮）</td></tr><tr><td><code>Right</code></td><td>右键</td></tr><tr><td><code>Back</code></td><td>侧键后退</td></tr><tr><td><code>Forward</code></td><td>侧键前进</td></tr></tbody></table><h3 id="wheeltype" tabindex="-1">WheelType <a class="header-anchor" href="#wheeltype" aria-label="Permalink to &quot;WheelType&quot;">​</a></h3><table tabindex="0"><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td><code>None</code></td><td>无单位</td></tr><tr><td><code>Pixel</code></td><td>以像素为单位</td></tr><tr><td><code>Line</code></td><td>以行为单位（约 1rem）</td></tr><tr><td><code>Page</code></td><td>以页为单位（一个屏幕高度）</td></tr></tbody></table><h3 id="actiontype" tabindex="-1">ActionType <a class="header-anchor" href="#actiontype" aria-label="Permalink to &quot;ActionType&quot;">​</a></h3><table tabindex="0"><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td><code>Click</code></td><td>点击事件（按下与抬起在同一元素）</td></tr><tr><td><code>Down</code></td><td>鼠标或手指按下事件</td></tr><tr><td><code>Move</code></td><td>鼠标或手指移动事件</td></tr><tr><td><code>Up</code></td><td>鼠标或手指抬起事件</td></tr><tr><td><code>Enter</code></td><td>进入元素时触发</td></tr><tr><td><code>Leave</code></td><td>离开元素时触发</td></tr><tr><td><code>Wheel</code></td><td>滚轮事件</td></tr></tbody></table><h3 id="eventprogress" tabindex="-1">EventProgress <a class="header-anchor" href="#eventprogress" aria-label="Permalink to &quot;EventProgress&quot;">​</a></h3><table tabindex="0"><thead><tr><th>值</th><th>说明</th></tr></thead><tbody><tr><td><code>Capture</code></td><td>捕获阶段</td></tr><tr><td><code>Bubble</code></td><td>冒泡阶段</td></tr></tbody></table><hr><h2 id="接口说明" tabindex="-1">接口说明 <a class="header-anchor" href="#接口说明" aria-label="Permalink to &quot;接口说明&quot;">​</a></h2><h3 id="iactioneventbase" tabindex="-1">IActionEventBase <a class="header-anchor" href="#iactioneventbase" aria-label="Permalink to &quot;IActionEventBase&quot;">​</a></h3><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>target</code></td><td><code>RenderItem</code></td><td>触发事件的元素</td></tr><tr><td><code>touch</code></td><td><code>boolean</code></td><td>是否为触摸操作（<code>true</code> 表示触摸，<code>false</code> 表示鼠标）</td></tr><tr><td><code>type</code></td><td><code>MouseType</code></td><td>触发事件的按键类型（参考 <code>MouseType</code>）</td></tr><tr><td><code>buttons</code></td><td><code>number</code></td><td>当前按下的按键（通过位运算判断，例如 <code>buttons &amp; MouseType.Left</code>）</td></tr><tr><td><code>altKey</code></td><td><code>boolean</code></td><td>是否按下 <code>Alt</code> 键</td></tr><tr><td><code>shiftKey</code></td><td><code>boolean</code></td><td>是否按下 <code>Shift</code> 键</td></tr><tr><td><code>ctrlKey</code></td><td><code>boolean</code></td><td>是否按下 <code>Ctrl</code> 键</td></tr><tr><td><code>metaKey</code></td><td><code>boolean</code></td><td>是否按下 <code>Windows/Command</code> 键</td></tr></tbody></table><hr><h3 id="iactionevent" tabindex="-1">IActionEvent <a class="header-anchor" href="#iactionevent" aria-label="Permalink to &quot;IActionEvent&quot;">​</a></h3><h4 id="继承关系" tabindex="-1">继承关系 <a class="header-anchor" href="#继承关系" aria-label="Permalink to &quot;继承关系&quot;">​</a></h4>',19)),(i(),d(l,null,{default:s(()=>[h(a,{id:"mermaid-349",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20IActionEvent%20--%3E%20IActionEventBase%0A"})]),fallback:s(()=>t[0]||(t[0]=[n(" Loading... ")])),_:1})),t[3]||(t[3]=e('<table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>identifier</code></td><td><code>number</code></td><td>操作的唯一标识符（在按下、移动、抬起中一致）</td></tr><tr><td><code>offsetX</code></td><td><code>number</code></td><td>相对于元素左上角的横坐标</td></tr><tr><td><code>offsetY</code></td><td><code>number</code></td><td>相对于元素左上角的纵坐标</td></tr><tr><td><code>absoluteX</code></td><td><code>number</code></td><td>相对于整个画布左上角的横坐标</td></tr><tr><td><code>absoluteY</code></td><td><code>number</code></td><td>相对于整个画布左上角的纵坐标</td></tr></tbody></table><h4 id="方法说明" tabindex="-1">方法说明 <a class="header-anchor" href="#方法说明" aria-label="Permalink to &quot;方法说明&quot;">​</a></h4><h5 id="stoppropagation" tabindex="-1"><code>stopPropagation</code> <a class="header-anchor" href="#stoppropagation" aria-label="Permalink to &quot;`stopPropagation`&quot;">​</a></h5><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> stopPropagation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><strong>描述</strong><br> 停止事件的传播（捕获或冒泡阶段）。</p><p><strong>示例</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ev</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ev.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stopPropagation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 阻止事件继续传播</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><hr><h3 id="iwheelevent" tabindex="-1">IWheelEvent <a class="header-anchor" href="#iwheelevent" aria-label="Permalink to &quot;IWheelEvent&quot;">​</a></h3>',9)),(i(),d(l,null,{default:s(()=>[h(a,{id:"mermaid-440",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20IWheelEvent%20--%3E%20IActionEvent%20--%3E%20IActionEventBase%0A"})]),fallback:s(()=>t[1]||(t[1]=[n(" Loading... ")])),_:1})),t[4]||(t[4]=e(`<table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>wheelX</code></td><td><code>number</code></td><td>横向滚动量</td></tr><tr><td><code>wheelY</code></td><td><code>number</code></td><td>纵向滚动量</td></tr><tr><td><code>wheelZ</code></td><td><code>number</code></td><td>垂直屏幕方向的滚动量</td></tr><tr><td><code>wheelType</code></td><td><code>WheelType</code></td><td>滚动量的单位类型</td></tr></tbody></table><hr><h3 id="erenderitemactionevent" tabindex="-1">ERenderItemActionEvent <a class="header-anchor" href="#erenderitemactionevent" aria-label="Permalink to &quot;ERenderItemActionEvent&quot;">​</a></h3><p>描述了所有的交互事件类型。</p><table tabindex="0"><thead><tr><th>事件名</th><th>参数类型</th><th>说明</th></tr></thead><tbody><tr><td><code>clickCapture</code></td><td><code>Readonly&lt;IActionEvent&gt;</code></td><td>点击事件的捕获阶段</td></tr><tr><td><code>click</code></td><td><code>Readonly&lt;IActionEvent&gt;</code></td><td>点击事件的冒泡阶段</td></tr><tr><td><code>downCapture</code></td><td><code>Readonly&lt;IActionEvent&gt;</code></td><td>按下事件的捕获阶段</td></tr><tr><td><code>down</code></td><td><code>Readonly&lt;IActionEvent&gt;</code></td><td>按下事件的冒泡阶段</td></tr><tr><td><code>moveCapture</code></td><td><code>Readonly&lt;IActionEvent&gt;</code></td><td>移动事件的捕获阶段</td></tr><tr><td><code>move</code></td><td><code>Readonly&lt;IActionEvent&gt;</code></td><td>移动事件的冒泡阶段</td></tr><tr><td><code>upCapture</code></td><td><code>Readonly&lt;IActionEvent&gt;</code></td><td>抬起事件的捕获阶段</td></tr><tr><td><code>up</code></td><td><code>Readonly&lt;IActionEvent&gt;</code></td><td>抬起事件的冒泡阶段</td></tr><tr><td><code>enter</code></td><td><code>Readonly&lt;IActionEventBase&gt;</code></td><td>进入元素事件</td></tr><tr><td><code>leave</code></td><td><code>Readonly&lt;IActionEventBase&gt;</code></td><td>离开元素事件</td></tr><tr><td><code>wheelCapture</code></td><td><code>Readonly&lt;IWheelEvent&gt;</code></td><td>滚轮事件的捕获阶段</td></tr><tr><td><code>wheel</code></td><td><code>Readonly&lt;IWheelEvent&gt;</code></td><td>滚轮事件的冒泡阶段</td></tr></tbody></table><hr><h3 id="actioneventmap" tabindex="-1">ActionEventMap <a class="header-anchor" href="#actioneventmap" aria-label="Permalink to &quot;ActionEventMap&quot;">​</a></h3><table tabindex="0"><thead><tr><th>键（ActionType）</th><th>值类型</th><th>说明</th></tr></thead><tbody><tr><td><code>Click</code></td><td><code>IActionEvent</code></td><td>点击事件</td></tr><tr><td><code>Down</code></td><td><code>IActionEvent</code></td><td>按下事件</td></tr><tr><td><code>Enter</code></td><td><code>IActionEvent</code></td><td>进入元素事件</td></tr><tr><td><code>Leave</code></td><td><code>IActionEvent</code></td><td>离开元素事件</td></tr><tr><td><code>Move</code></td><td><code>IActionEvent</code></td><td>移动事件</td></tr><tr><td><code>Up</code></td><td><code>IActionEvent</code></td><td>抬起事件</td></tr><tr><td><code>Wheel</code></td><td><code>IWheelEvent</code></td><td>滚轮事件</td></tr></tbody></table><hr><h2 id="总使用示例" tabindex="-1">总使用示例 <a class="header-anchor" href="#总使用示例" aria-label="Permalink to &quot;总使用示例&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-cyBna" id="tab-JJnUFrl" checked><label data-title="typescript" for="tab-JJnUFrl">typescript</label><input type="radio" name="group-cyBna" id="tab-cqH83LY"><label data-title="tsx" for="tab-cqH83LY">tsx</label></div><div class="blocks"><div class="language-typescript vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建渲染元素（以 Sprite 为例）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Sprite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监听点击事件（冒泡阶段）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ev</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;点击坐标:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ev.offsetX, ev.offsetY);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ev.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stopPropagation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 阻止冒泡</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监听滚轮事件（捕获阶段）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wheelCapture&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ev</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;滚轮滚动量:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ev.wheelY, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;单位:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, WheelType[ev.wheelType]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监听进入元素事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;enter&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ev</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;进入元素，触发按键:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, MouseType[ev.type]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监听点击事件（冒泡阶段）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> click</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ev</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IActionEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;点击坐标:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ev.offsetX, ev.offsetY);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ev.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stopPropagation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 阻止冒泡</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监听滚轮事件（捕获阶段）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wheel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ev</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IWheelEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;滚轮滚动量:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ev.wheelY, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;单位:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, WheelType[ev.wheelType]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监听进入元素事件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> enter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ev</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IActionEventBase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;进入元素，触发按键:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, MouseType[ev.type]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">sprite</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onClick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{click} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onWheelCapture</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{wheel} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onEnter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{enter} /&gt;;</span></span></code></pre></div></div></div>`,11))])}const A=p(k,[["render",c]]);export{u as __pageData,A as default};
