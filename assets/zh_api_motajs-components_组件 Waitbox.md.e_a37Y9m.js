import{_ as l,C as e,c as k,o as t,j as i,b as p,a0 as d,a,w as h,G as r,a1 as o}from"./chunks/framework.DleKaMrY.js";const u=JSON.parse('{"title":"WaitBox 等待框组件 API 文档","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/motajs-components/组件 Waitbox.md","filePath":"zh/api/motajs-components/组件 Waitbox.md"}'),E={name:"zh/api/motajs-components/组件 Waitbox.md"};function g(c,s,y,F,C,B){const n=e("Mermaid");return t(),k("div",null,[s[1]||(s[1]=i("h1",{id:"waitbox-等待框组件-api-文档",tabindex:"-1"},[a("WaitBox 等待框组件 API 文档 "),i("a",{class:"header-anchor",href:"#waitbox-等待框组件-api-文档","aria-label":'Permalink to "WaitBox 等待框组件 API 文档"'},"​")],-1)),s[2]||(s[2]=i("p",null,[a("本文档由 "),i("code",null,"DeepSeek R1"),a(" 模型生成并微调。")],-1)),(t(),p(o,null,{default:h(()=>[r(n,{id:"mermaid-6",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20WaitBoxProps%20--%3E%20BackgroundProps%0A%20%20%20%20WaitBoxProps%20--%3E%20TextContentProps%0A%0A%20%20%20%20click%20BackgroundProps%20%22.%2F%E7%BB%84%E4%BB%B6%2520Background%22%0A%20%20%20%20click%20TextContentProps%20%22.%2F%E7%BB%84%E4%BB%B6%2520TextContent%22%0A"})]),fallback:h(()=>s[0]||(s[0]=[a(" Loading... ")])),_:1})),s[3]||(s[3]=d(`<hr><h2 id="核心特性" tabindex="-1">核心特性 <a class="header-anchor" href="#核心特性" aria-label="Permalink to &quot;核心特性&quot;">​</a></h2><ul><li><strong>Promise 绑定</strong>：自动监控 <code>Promise</code> 状态</li><li><strong>复合式组件</strong>：集成背景+文字+加载动画</li><li><strong>双重控制</strong>：支持自动/手动完成等待</li><li><strong>动态布局</strong>：根据内容自动计算高度</li></ul><hr><h2 id="组件定位" tabindex="-1">组件定位 <a class="header-anchor" href="#组件定位" aria-label="Permalink to &quot;组件定位&quot;">​</a></h2><blockquote><p>💡 更推荐使用 <code>waitbox</code> 工具函数，该组件主要用于需要深度定制的场景。参考 <a href="./functions.html#waitbox">此文档</a>。</p></blockquote><hr><h2 id="props-属性说明" tabindex="-1">Props 属性说明 <a class="header-anchor" href="#props-属性说明" aria-label="Permalink to &quot;Props 属性说明&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td><code>promise</code></td><td><code>Promise&lt;T&gt;</code></td><td>否</td><td>要监控的 <code>Promise</code> 对象</td></tr><tr><td><code>loc</code></td><td><code>ElementLocator</code></td><td>是</td><td>容器定位</td></tr><tr><td><code>width</code></td><td><code>number</code></td><td>是</td><td>内容区域宽度（像素）</td></tr><tr><td><code>text</code></td><td><code>string</code></td><td>否</td><td>等待提示文字</td></tr><tr><td><code>pad</code></td><td><code>number</code></td><td><code>16</code></td><td>文字与边缘间距</td></tr></tbody></table><h3 id="继承属性" tabindex="-1">继承属性 <a class="header-anchor" href="#继承属性" aria-label="Permalink to &quot;继承属性&quot;">​</a></h3><ul><li>支持所有 <code>Background</code> 背景属性</li><li>支持所有 <code>TextContent</code> 文本属性</li></ul><hr><h2 id="事件说明" tabindex="-1">事件说明 <a class="header-anchor" href="#事件说明" aria-label="Permalink to &quot;事件说明&quot;">​</a></h2><table tabindex="0"><thead><tr><th>事件名</th><th>参数</th><th>触发时机</th></tr></thead><tbody><tr><td><code>resolve</code></td><td><code>T</code></td><td><code>Promise</code> 完成时返回结果值</td></tr></tbody></table><hr><h2 id="exposed-methods-暴露方法" tabindex="-1">Exposed Methods 暴露方法 <a class="header-anchor" href="#exposed-methods-暴露方法" aria-label="Permalink to &quot;Exposed Methods 暴露方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th>方法名</th><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>resolve</code></td><td><code>data: T</code></td><td>手动完成等待（立即触发事件）</td></tr></tbody></table><hr><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><h3 id="基础组件用法" tabindex="-1">基础组件用法 <a class="header-anchor" href="#基础组件用法" aria-label="Permalink to &quot;基础组件用法&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 等待网络请求</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fetchPromise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetchData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WaitBox</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{fetchPromise}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    loc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">208</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">208</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 居中定位</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">208</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;加载中...&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    font</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;黑体&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    onResolve</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;收到数据:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data)}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;;</span></span></code></pre></div><h3 id="手动控制示例" tabindex="-1">手动控制示例 <a class="header-anchor" href="#手动控制示例" aria-label="Permalink to &quot;手动控制示例&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> waitRef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WaitBoxExpose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 手动结束等待</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> forceComplete</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    waitRef.value?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WaitBox</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        ref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{waitRef}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        loc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">360</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;点击按钮继续&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rgba(0,0,0,0.7)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WaitBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><hr><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ol><li><p><strong>推荐用法</strong><br> 多数场景应使用 <code>waitbox</code> 函数，以下情况才需要直接使用组件：</p><ul><li>需要永久显示的等待界面</li><li>需要组合复杂子组件</li><li>需要复用同一个等待实例</li></ul></li></ol>`,26))])}const m=l(E,[["render",g]]);export{u as __pageData,m as default};
